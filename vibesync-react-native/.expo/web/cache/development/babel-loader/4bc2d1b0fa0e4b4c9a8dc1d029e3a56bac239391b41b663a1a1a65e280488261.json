{"ast":null,"code":"var _jsxFileName = \"/project/sandbox/user-workspace/vibesync-react-native/src/screens/LoginScreen.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { auth, googleProvider, signInWithEmailAndPassword, createUserWithEmailAndPassword, signInWithPopup } from '../../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginScreen() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const handleEmailLogin = async () => {\n    if (!email || !password) {\n      Alert.alert('Error', 'Please fill in all fields');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n    } catch (error) {\n      try {\n        await createUserWithEmailAndPassword(auth, email, password);\n      } catch (signupError) {\n        Alert.alert('Error', signupError.message);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleGoogleLogin = async () => {\n    if (Platform.OS !== 'web') {\n      Alert.alert('Error', 'Google Sign-in is only available on web platform');\n      return;\n    }\n    try {\n      await signInWithPopup(auth, googleProvider);\n    } catch (error) {\n      Alert.alert('Error', error.message);\n    }\n  };\n  return _jsxDEV(View, {\n    className: \"flex-1 items-center justify-center bg-white p-6\",\n    children: [_jsxDEV(Text, {\n      className: \"text-4xl font-bold mb-8\",\n      children: \"VibeSync\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      className: \"text-gray-600 text-center mb-8\",\n      children: \"Share your musical journey with the world\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      className: \"w-full space-y-4\",\n      children: [_jsxDEV(TextInput, {\n        className: \"w-full h-12 px-4 border border-gray-300 rounded-lg bg-gray-50\",\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: setEmail,\n        keyboardType: \"email-address\",\n        autoCapitalize: \"none\",\n        editable: !isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        className: \"w-full h-12 px-4 border border-gray-300 rounded-lg bg-gray-50\",\n        placeholder: \"Password\",\n        value: password,\n        onChangeText: setPassword,\n        secureTextEntry: true,\n        editable: !isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        className: `w-full h-12 rounded-lg items-center justify-center ${isLoading ? 'bg-gray-400' : 'bg-black'}`,\n        onPress: handleEmailLogin,\n        disabled: isLoading,\n        children: _jsxDEV(Text, {\n          className: \"text-white font-semibold\",\n          children: isLoading ? 'Please wait...' : 'Login / Register'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), Platform.OS === 'web' && _jsxDEV(TouchableOpacity, {\n        className: \"w-full h-12 border border-gray-300 rounded-lg items-center justify-center mt-4\",\n        onPress: handleGoogleLogin,\n        disabled: isLoading,\n        children: _jsxDEV(Text, {\n          className: \"font-semibold\",\n          children: \"Continue with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      className: \"text-gray-500 mt-8 text-center\",\n      children: \"By continuing, you agree to our Terms of Service and Privacy Policy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","Alert","Platform","auth","googleProvider","signInWithEmailAndPassword","createUserWithEmailAndPassword","signInWithPopup","jsxDEV","_jsxDEV","LoginScreen","email","setEmail","password","setPassword","isLoading","setIsLoading","handleEmailLogin","alert","error","signupError","message","handleGoogleLogin","OS","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChangeText","keyboardType","autoCapitalize","editable","secureTextEntry","onPress","disabled"],"sources":["/project/sandbox/user-workspace/vibesync-react-native/src/screens/LoginScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, Alert, Platform } from 'react-native';\nimport { \n  auth, \n  googleProvider, \n  signInWithEmailAndPassword, \n  createUserWithEmailAndPassword,\n  signInWithPopup \n} from '../../firebase';\n\nexport default function LoginScreen() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleEmailLogin = async () => {\n    if (!email || !password) {\n      Alert.alert('Error', 'Please fill in all fields');\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n    } catch (error) {\n      try {\n        await createUserWithEmailAndPassword(auth, email, password);\n      } catch (signupError) {\n        Alert.alert('Error', signupError.message);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleGoogleLogin = async () => {\n    if (Platform.OS !== 'web') {\n      Alert.alert('Error', 'Google Sign-in is only available on web platform');\n      return;\n    }\n\n    try {\n      await signInWithPopup(auth, googleProvider);\n    } catch (error) {\n      Alert.alert('Error', error.message);\n    }\n  };\n\n  return (\n    <View className=\"flex-1 items-center justify-center bg-white p-6\">\n      <Text className=\"text-4xl font-bold mb-8\">VibeSync</Text>\n      <Text className=\"text-gray-600 text-center mb-8\">Share your musical journey with the world</Text>\n\n      <View className=\"w-full space-y-4\">\n        <TextInput\n          className=\"w-full h-12 px-4 border border-gray-300 rounded-lg bg-gray-50\"\n          placeholder=\"Email\"\n          value={email}\n          onChangeText={setEmail}\n          keyboardType=\"email-address\"\n          autoCapitalize=\"none\"\n          editable={!isLoading}\n        />\n\n        <TextInput\n          className=\"w-full h-12 px-4 border border-gray-300 rounded-lg bg-gray-50\"\n          placeholder=\"Password\"\n          value={password}\n          onChangeText={setPassword}\n          secureTextEntry\n          editable={!isLoading}\n        />\n\n        <TouchableOpacity\n          className={`w-full h-12 rounded-lg items-center justify-center ${\n            isLoading ? 'bg-gray-400' : 'bg-black'\n          }`}\n          onPress={handleEmailLogin}\n          disabled={isLoading}\n        >\n          <Text className=\"text-white font-semibold\">\n            {isLoading ? 'Please wait...' : 'Login / Register'}\n          </Text>\n        </TouchableOpacity>\n\n        {Platform.OS === 'web' && (\n          <TouchableOpacity\n            className=\"w-full h-12 border border-gray-300 rounded-lg items-center justify-center mt-4\"\n            onPress={handleGoogleLogin}\n            disabled={isLoading}\n          >\n            <Text className=\"font-semibold\">Continue with Google</Text>\n          </TouchableOpacity>\n        )}\n      </View>\n\n      <Text className=\"text-gray-500 mt-8 text-center\">\n        By continuing, you agree to our Terms of Service and Privacy Policy\n      </Text>\n    </View>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}