{"ast":null,"code":"var _jsxFileName = \"/project/sandbox/user-workspace/vibesync-react-native/src/screens/JoinSessionScreen.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { collection, query, where, getDocs } from 'firebase/firestore';\nimport { db } from '../../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function JoinSessionScreen() {\n  const [inputCode, setInputCode] = useState('');\n  const [foundSession, setFoundSession] = useState(null);\n  const handleJoin = async () => {\n    const sessionsRef = collection(db, 'groupSessions');\n    const q = query(sessionsRef, where('inviteCode', '==', inputCode));\n    const querySnap = await getDocs(q);\n    if (!querySnap.empty) {\n      const docData = querySnap.docs[0].data();\n      if (docData.hostId && docData.inviteCode && typeof docData.isPlaying === 'boolean' && Array.isArray(docData.participants)) {\n        const sessionData = {\n          hostId: docData.hostId,\n          inviteCode: docData.inviteCode,\n          isPlaying: docData.isPlaying,\n          participants: docData.participants,\n          timestamp: docData.timestamp || Date.now(),\n          trackUri: docData.trackUri\n        };\n        setFoundSession(sessionData);\n      } else {\n        Alert.alert('Error', 'Invalid session data format');\n      }\n    } else {\n      Alert.alert('Session Not Found', 'No session found with that invite code');\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(TextInput, {\n      placeholder: \"Enter Invite Code\",\n      value: inputCode,\n      onChangeText: setInputCode,\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      onPress: handleJoin,\n      style: styles.joinButton,\n      children: _jsxDEV(Text, {\n        style: styles.buttonText,\n        children: \"Join Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), foundSession && _jsxDEV(Text, {\n      style: styles.successText,\n      children: [\"\\u2705 Session Found: Host \", foundSession.hostId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    padding: 8,\n    borderRadius: 4,\n    marginBottom: 8\n  },\n  joinButton: {\n    backgroundColor: '#2563eb',\n    padding: 12,\n    borderRadius: 6,\n    marginTop: 8\n  },\n  buttonText: {\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: '600'\n  },\n  successText: {\n    marginTop: 8,\n    color: '#16a34a',\n    fontWeight: '500'\n  }\n});\nexport default JoinSessionScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","Alert","StyleSheet","collection","query","where","getDocs","db","jsxDEV","_jsxDEV","JoinSessionScreen","inputCode","setInputCode","foundSession","setFoundSession","handleJoin","sessionsRef","q","querySnap","empty","docData","docs","data","hostId","inviteCode","isPlaying","Array","isArray","participants","sessionData","timestamp","Date","now","trackUri","alert","style","styles","container","children","placeholder","value","onChangeText","input","fileName","_jsxFileName","lineNumber","columnNumber","onPress","joinButton","buttonText","successText","create","padding","borderWidth","borderColor","borderRadius","marginBottom","backgroundColor","marginTop","color","textAlign","fontWeight"],"sources":["/project/sandbox/user-workspace/vibesync-react-native/src/screens/JoinSessionScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, Alert, StyleSheet } from 'react-native';\nimport { collection, query, where, getDocs, DocumentData } from 'firebase/firestore';\nimport { db } from '../../firebase';\n\ninterface SessionData {\n  hostId: string;\n  inviteCode: string;\n  isPlaying: boolean;\n  participants: string[];\n  timestamp: number;\n  trackUri?: string;\n}\n\nexport function JoinSessionScreen() {\n  const [inputCode, setInputCode] = useState('');\n  const [foundSession, setFoundSession] = useState<SessionData | null>(null);\n\n  const handleJoin = async () => {\n    const sessionsRef = collection(db, 'groupSessions');\n    const q = query(sessionsRef, where('inviteCode', '==', inputCode));\n    const querySnap = await getDocs(q);\n    if (!querySnap.empty) {\n      const docData = querySnap.docs[0].data();\n      // Validate and transform the data to match SessionData interface\n      if (docData.hostId && docData.inviteCode && typeof docData.isPlaying === 'boolean' && Array.isArray(docData.participants)) {\n        const sessionData: SessionData = {\n          hostId: docData.hostId,\n          inviteCode: docData.inviteCode,\n          isPlaying: docData.isPlaying,\n          participants: docData.participants,\n          timestamp: docData.timestamp || Date.now(),\n          trackUri: docData.trackUri\n        };\n        setFoundSession(sessionData);\n        // Optional: Join the session or navigate\n      } else {\n        Alert.alert('Error', 'Invalid session data format');\n      }\n    } else {\n      Alert.alert('Session Not Found', 'No session found with that invite code');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        placeholder=\"Enter Invite Code\"\n        value={inputCode}\n        onChangeText={setInputCode}\n        style={styles.input}\n      />\n      <TouchableOpacity onPress={handleJoin} style={styles.joinButton}>\n        <Text style={styles.buttonText}>Join Session</Text>\n      </TouchableOpacity>\n      {foundSession && (\n        <Text style={styles.successText}>\n          âœ… Session Found: Host {foundSession.hostId}\n        </Text>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    padding: 8,\n    borderRadius: 4,\n    marginBottom: 8,\n  },\n  joinButton: {\n    backgroundColor: '#2563eb',\n    padding: 12,\n    borderRadius: 6,\n    marginTop: 8,\n  },\n  buttonText: {\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: '600',\n  },\n  successText: {\n    marginTop: 8,\n    color: '#16a34a',\n    fontWeight: '500',\n  },\n});\n\nexport default JoinSessionScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}